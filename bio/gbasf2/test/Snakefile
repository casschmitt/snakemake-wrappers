localrules:
    skim,
    set_proxy,

import tempfile
from extravariables import outputfile
temp_directory = tempfile.gettempdir()

rule skim: #submit a job to the Belle II grid
    input:
        proxy_text_file=f"{temp_directory}/proxy.dat" #require proxy setup rule
    params:
        steeringfile=f"{workflow.basedir}/Skim.py", #steering file script
        sandbox_input_files=["extravariables.py"], #files to add to job sandbox
        gbasf2_dataset=lambda wildcards: open("gbasf2_paths.dat").read().strip(), #gbasf2 input file path
        release="release-06-00-03", #basf2 release
        maxretries=10, #maximal number of reschedulings
        gbasf2_download_logs=True, #should logs be downloaded
        gbasf2_min_proxy_lifetime=0, #mininum proxy lifetime for job submit
        gbasf2_proxy_lifetime=24, #proxy lifetime for proxy initialization
        gbasf2_output_file_name=outputfile #output file name
    output:
        output_filelist="data/skimslist.dat" #contains list of paths of downloaded output files
    log:
        "logs/skim_log.log"
    wrapper:
        "master/bio/gbasf2"


rule set_proxy: #set the gbasf2 proxy to be used by the subsequent rules
    params:
        setProxy=True #set to setup proxy
    output:
        proxy_text_file=temp(f"{temp_directory}/proxy.dat") #temporary file to link proxy setup to skim rule
    log:
        "logs/proxy_log.log"
    wrapper:
        "master/bio/gbasf2"
